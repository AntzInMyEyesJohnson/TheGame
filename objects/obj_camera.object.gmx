<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
global.screenshake = 0;
global.screenfreeze = -1;
global.screenkick = 0;
global.screenzoom = 0;
global.cameratilt = false
start_position_at_player = true;
mouse = noone;
player = noone;
camhspeed = -1;
camvspeed = -1;
screen_width = 480;
screen_height = 270;
view_wzoom = screen_width;
view_hzoom = screen_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set x and y to the hero
if instance_exists(obj_player) {
    //set player
    player = obj_player;
    mouse = obj_mouse;
    //jump to player immeaditely at start of game
    if (start_position_at_player){
        camera_x = player.x;
        camera_y = player.y;
        view_hspeed = -1;
        view_vspeed = -1;
        start_position_at_player = false;
    }else {
        camhspeed = 15;
        camvspeed = 15;
        ratio = .1;
        if (instance_exists(obj_gunslinger)){
            mouse = obj_mouse;
            player = obj_gunslinger;
            if (player.lockedon == true) {
                camhspeed = 15;
                camvspeed = 15;
                ratio = 0.6;
            }
        }else if (instance_exists(obj_bandit)){
            mouse = obj_mouse;
            player = obj_bandit;
            if (player.state == 'assassinate' or player.state == 'teleport') {
                //camhspeed = 20;
                //camvspeed = 20;
                ratio = .9;
            }
        }else if (instance_exists(obj_samurai)){
            mouse = obj_mouse;
            player = obj_samurai;
            
            if (player.state == stateACTION1) {
                camhspeed = 5;
                camvspeed = 5;
            }
            if (player.state == stateUNIQUE or player.state == stateSPECIAL){
                camhspeed = 5;
                camvspeed = 5;
            }
        }else if (instance_exists(obj_viking)){
            mouse = obj_mouse;
            player = obj_viking;
        }else if (instance_exists(obj_wizard)){
            mouse = obj_mouse;
            player = obj_wizard;
        }
        view_hspeed = camhspeed;
        view_vspeed = camvspeed;
        
        camera_x = lerp(player.x,mouse.x,ratio);
        camera_y = lerp(player.y,mouse.y,ratio);    
    } 
    
    //screen shake
    aim_dir = point_direction(player.x,player.y,mouse.x,mouse.y);
    if (abs(global.screenkick) &gt; 0){
        //screenkick variable would normally be set to a negative number like -10
        xx = camera_x + lengthdir_x(global.screenkick,aim_dir);
        yy = camera_y + lengthdir_y(global.screenkick,aim_dir);
        global.screenshake = abs(global.screenkick)/1.5;
        global.screenkick = sign(global.screenkick)*(abs(global.screenkick)-2);
    }  else {
        //reset screenshake so it doesnt continue to shake after the screenkick
        global.screenshake = 0;
    }
    
    if (global.screenshake &gt; 0) {
        x = xx + lengthdir_x(choose(-global.screenshake,global.screenshake),irandom(360));
        y = yy + lengthdir_y(choose(-global.screenshake,global.screenshake),irandom(360));
    } else {
        x = camera_x;
        y = camera_y;
    }
    
    if (keyboard_check(ord('F'))){
        view_wview = room_width;
        view_hview = room_height;
        view_wport = room_width;
        view_hport = room_height;
        view_hspeed = -1;
        view_vspeed = -1;
    } else {
        view_wview = screen_width;
        view_hview = screen_height;
        view_wport = screen_width;
        view_hport = screen_height;
    }
    
    //handle screen freeze globalvar
    if (global.screenfreeze &gt;= 0){   
        global.screenfreeze--;
    }
}

if (instance_exists(obj_game_over)){
    start_position_at_player = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
start_position_at_player = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
