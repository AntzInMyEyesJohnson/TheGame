<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init global control variables.
global.difficulty = 0;
global.stage = 1;
global.level = 1;
global.area = HUBMAP;
global.enemy_type_array[2] = noone;
global.enemy_type_array[1] = noone;
global.enemy_type_array[0] = noone;
global.weapon_drop_type = 0;
global.weapon_level = global.stage;

//init inventory save slots
global.weapon_pos = 0;
global.weapon_saved_slot[global.weapon_pos] = noone
//init starting health
global.starting_health = 0;
//delay to wait for player to be created
time_delay_check = room_speed;

//keep track of surface trails
globalvar ds_trails;
ds_trails = ds_list_create();

//keep track of upgrades that have been acquired
globalvar attached_upgrades;
attached_upgrades = ds_list_create();

//select the player
globalvar curPly;

//so health is only added once on the more health upgrade
add_more_health_once = false;

//Time stuff
globalvar time_slow,time_stop;
time_slow = false;
time_stop = false;

//kill counter
globalvar kill_combo_count, kill_combo_alarm, kill_combo_alarm_set, kill_count;
kill_combo_count = 0;
kill_combo_alarm = -1;
kill_count = 0;
kill_combo_alarm_set = room_speed*30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control room transitions and level endings and some upgrades
if (instance_exists(obj_player) and time_delay_check &lt; 0 and (room == rm_level_generator)){
    //create level complete object
    /*
    if(instance_number(obj_enemy_parent) &lt;= 0 and player_health &gt; 0 and global.area != HUBMAP){
        if(!instance_exists(obj_level_complete)){
            instance_create(obj_player.x + lengthdir_x(irandom(24),irandom(360)),obj_player.y + lengthdir_y(irandom(24),irandom(360)),obj_level_complete);
        }
    }
    */
    //create the gameover sequence object
    if (player_health &lt;= 0){
        if(!instance_exists(obj_game_over)){
            instance_create(obj_player.x,obj_player.y,obj_game_over);
        }
    }
    
    /*###############HEALTH UPGRADE*/
    //check for the more health upgrade if player_health_max is not already upgraded
    if (player_health_max  &lt; 8){
        for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
            if (attached_upgrades[| i] == MORE_HEAL){
                //if present then add 2 to the max health of the player
                player_health_max = 8;
                break;
            }
        }
    }
    //add health to the player once
    if (player_health_max == 8 and add_more_health_once = false){
        player_health += 3;
        if (player_health &gt; player_health_max){
            player_health = player_health_max;
        }
        add_more_health_once = true;
    }
}

if (time_delay_check &gt;= 0){time_delay_check--;}


//track consecutive kills
if (round(kill_combo_alarm) == 0){kill_combo_count = 0;}
if (kill_combo_alarm &gt;= 0){kill_combo_alarm--;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy ds list
if ds_exists(attached_upgrades,ds_type_list){
    ds_list_destroy(attached_upgrades);
}

if ds_exists(ds_trails,ds_type_list){
    ds_list_destroy(ds_trails);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw attached upgrade list debug
if (ds_list_size(attached_upgrades) &gt; 0){
    display_set_gui_size(display_get_width(),display_get_height());
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_font(fnt_debug);
    draw_set_color(c_black);
    draw_set_alpha(.5);
    
    for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
        draw_text(display_get_width()-180,i*20+25,string(global.upgrade[attached_upgrades[| i],text]));
    }
    draw_set_color(c_white);
    draw_set_alpha(1);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
