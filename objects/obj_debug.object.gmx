<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set gui to current vie
debug = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pressing tab
if (keyboard_check_pressed(vk_tab)){
    if (debug == true){
        debug = false;
    } else {
        debug = true;
    }
}

if (keyboard_check_pressed(vk_enter)){
    if (instance_exists(obj_enemy_parent)){
        with(obj_enemy_parent){
            instance_destroy();
        }
    }
}

///turn on ability power up
if (instance_exists(obj_player)){
    if (keyboard_check_pressed(ord('1'))){
        if (obj_player.ability_power_up == false){
            obj_player.ability_power_up = true;
        } else{
            obj_player.ability_power_up = false;
        }
    }
}

///turn on ability power up
if (instance_exists(obj_player)){
    if (keyboard_check_pressed(ord('2'))){
        if (obj_player.special_power_up == false){
            obj_player.special_power_up = true;
        } else{
            obj_player.special_power_up = false;
        }
    }
}

///turn on ability power up
if (instance_exists(obj_player)){
    if (keyboard_check_pressed(ord('3'))){
        if (obj_player.attack_power_up == false){
            obj_player.attack_power_up = true;
        } else{
            obj_player.attack_power_up = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///put all relavent variables on gui
if (debug == true and instance_exists(obj_player)){
    show_debug_overlay(true);
    display_set_gui_size(display_get_width(),display_get_height());
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_font(fnt_debug);
    draw_set_color(c_black);
    draw_text(220,125,"difficulty: " + string(global.difficulty)+
        "#player.x: " + string(obj_player.x)+
        "#player.y: " + string(obj_player.y)+
        "#view_xview: " + string(view_xview)+
        "#view_yview: " + string(view_yview)+
        "#view_xview+surf_x: " + string(view_xview+(view_wview-512))+
        "#view_yview+surf_y: " + string(view_yview+(view_hview-256))+
        "#player.x-view_xview: " + string(obj_player.x-view_xview)+
        "#player.y-view_yview: " + string(obj_player.y-view_yview)+
        "#player.x-view_xport: " + string(obj_player.x-view_xport)+
        "#player.y-view_yport: " + string(obj_player.y-view_yport)+
        "#player.x-128: " + string(obj_player.x-128)+
        "#player.y-128: " + string(obj_player.y-128)+
        "#hspd: " + string(obj_player.hspd)+
        "#vspd: " + string(obj_player.vspd)+
        "#enemies: " + string(instance_number(obj_enemy_parent))+
        "#ability: " + string(obj_player.ability_power_up)+
        "#special: " + string(obj_player.special_power_up)+
        "#weapon: " + string(obj_player.attack_power_up)+
        "#time_slow: " + string(time_slow)+
        "#time_stop: " + string(time_stop));
    //draw_text(320,175,"queue size: " + string(ds_queue_size(obj_samurai.swords_queue)));
    draw_set_color(c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
