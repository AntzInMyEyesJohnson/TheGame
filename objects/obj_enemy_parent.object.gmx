<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stuff that affects all enemies like upgrade stuff
/*###############WEAKER ENEMIES UPGRADE*/
for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
    if (attached_upgrades[| i] == WEAK_ENEM){
        //if present then subtract 2 to the max health of the enemies
        enemy_health_max -= 2;
        break;
    }
}
//check if max health is less than or equal to zero then set it to 1
if (enemy_health_max &gt; 0){
    enemy_health = enemy_health_max;
} else {
    enemy_health = 1;
}

//time manipulation stuff
time_exception = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list and draw to surface
if (ds_exists(hitby_list,ds_type_list)){
    ds_list_destroy(hitby_list);
}

if (path_exists(epath)){
    path_delete(epath);
}

if (instance_exists(obj_player)) {
    while (ds_list_find_index(obj_player.combatList,id) != -1){
        ds_list_delete(obj_player.combatList,ds_list_find_index(obj_player.combatList,id));
    }
}

//set death depth
depth = -(y+8);
//draw to surface
surface_set_target(obj_surface.dead_sf);
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,c_gray,image_alpha)
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Combat range check
InCombatRange(400);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list
if (ds_exists(hitby_list,ds_type_list)){
    ds_list_destroy(hitby_list);
}

if (path_exists(epath)){
    path_delete(epath);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list
if (ds_exists(hitby_list,ds_type_list)){
    ds_list_destroy(hitby_list);
}

if (path_exists(epath)){
    path_delete(epath);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///for freeflow hint stuff
if (comscript == ceChargeAttack or comscript == ceAim or comscript == ceAttack){
    var x1,x2,y1,y2,arrow,color;
    arrow = false;
    switch(eff_type){
        case ffMAIN:color = c_aqua;break;
        case ffABIL:color = c_yellow;break;
        case ffLTAB:
            arrow = true;
            color = c_orange;
            x1 = 10;
            x2 = -10;
            y1 = -39;
            y2 = -40;
        break;
        case ffRTAB:
            arrow = true;
            color = c_orange;
            x1 = -10;
            x2 = 10;
            y1 = -39;
            y2 = -40;
        break;
        case ffUTAB:
            arrow = true;
            color = c_orange;
            x1 = 0;
            x2 = 1;
            y1 = -30;
            y2 = -50;
        break;
        case ffDTAB:
            arrow = true;
            color = c_orange;
            x1 = 0;
            x2 = 1;
            y1 = -50;
            y2 = -30;
        break;
        case ffSPMA:color = c_green;break;
        case ffSPAB:color = c_purple;break;
    }
    if (arrow){draw_arrow(x+x1,y+y1,x+x2,y+y2,4);}
    draw_sprite_ext(spr_ff_hint,irandom(3),x,bbox_top,1,1,0,color,1);
}
draw_set_font(fnt_weapon_pickup);
if (ds_list_find_index(obj_player.combatList,id) != -1){
    var pos = ds_list_find_index(obj_player.combatList,id);
    draw_text(obj_player.combatList[| pos].x,obj_player.combatList[| pos].y,"In combatList:" + string(obj_player.combatList[| pos]));
}
draw_text(bbox_left,bbox_top-10,script_get_name(comscript)+" xx: "+string(xx)+"yy: "+string(yy));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
