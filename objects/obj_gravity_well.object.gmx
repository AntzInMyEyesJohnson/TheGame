<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gravity_well</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init gravity well
image_speed = 1;
destroy_alarm = room_speed*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///manip gravity
if instance_exists(obj_enemy_projectile_parent){
    if (distance_to_object(obj_enemy_projectile_parent) &lt;= 100){
        with (obj_enemy_projectile_parent){
            if (instance_place(x,y,obj_gravity_well)){
                gravity = 0;
                speed = 0;
            }else {
                gravity = .25;
                gravity_direction = point_direction(x,y,obj_gravity_well.x,obj_gravity_well.y);
            }
        }   
    } else {
        with (obj_enemy_projectile_parent){
            gravity = 0;
            speed = 0;
        }
    }
}

if instance_exists(obj_enemy_parent){
    for(var i = 0;i &lt; instance_number(obj_enemy_parent);i++){
        var enemy = instance_find(obj_enemy_parent,i);
        if (distance_to_object(enemy) &lt;= 60){
            with (enemy){
                if (instance_place(x,y,obj_gravity_well)){
                    gravity = 0;
                    speed = 0;
                }else {
                    gravity = .25;
                    gravity_direction = point_direction(x,y,obj_gravity_well.x,obj_gravity_well.y);
                }
            }   
        } else {
            with (enemy){
                gravity = 0;
                speed = 0;
            }
        }
    }
}

if (destroy_alarm &gt;= 0){
    destroy_alarm--;
}

if (destroy_alarm &lt; 0) {
    with(obj_enemy_parent){
        gravity = 0;
        speed = 0;
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
