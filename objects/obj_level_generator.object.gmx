<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init map variables
wall_tile_type = bg_hub_wall;
wall_tile_type_rare = bg_hub_wall_rare;
wall_odds = 5;//5 is default
foliage_tile_type = bg_hub_foliage;
foliage_odds = 15;
path_tile_type = bg_hub_path;
path_odds = 0;
floor_tile_type = bg_hub_floor;
floor_odds = 0;
shadow_tile_type = bg_default_shadow;
shadow_tile_type = bg_default_shadow_rare;
shadow_odds = 5;
background_tile_type = bg_hub_background;
cont_dt_odds = 3;//3 is default
map_size = 0;
map_gateways = 4;
destroy_island_cells = true;
enemy_spawn_odds = 0;
height = 64;
width = 64;

MapArray[4] = HUBMAP;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy the grid and destroy weapons and player
if (ds_exists(grid,ds_type_grid)){
    ds_grid_destroy(grid);
    mp_grid_destroy(grid_path);
}

    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init global variables and start random level event
if (instance_exists(obj_wall)){
    with (obj_wall){instance_destroy();}
}
if (instance_exists(obj_doorway)){
    with (obj_doorway){instance_destroy();}
}

if (room == rm_level_generator){
get_map_variables(global.area);
x=0;
y=0;

//set the grid width and height
width = room_width div CELL_WIDTH;
height = room_height div CELL_HEIGHT;

//create the grid
grid = ds_grid_create(width,height);

//create pathfinding grid
grid_path = mp_grid_create(0,0,width,height,CELL_WIDTH,CELL_HEIGHT);

//fill the grid with the void
ds_grid_set_region(grid,0,0,width,height,VOID);

//random seed
randomize();

//#######################CELLS####################################################
//create controller in the center of the grid
var start_x = width div 2;
var start_y = height div 2;
set_floor_cells(start_x,start_y,cont_dt_odds,map_size);

//set the randomly generated door positions
set_hub_doors(map_gateways,start_x,start_y);

//insert WALL cells to VOID cells touching FLOOR cells
set_wall_cells();

//tidy up isolated walls if map var is true
remove_island_cells(destroy_island_cells);

//index wall, floor, and door
//SetIndexes();

//#######################LIFEFORMS####################################################
//player spawn
spawn_player(start_x,start_y);

spawn_enemies(enemy_spawn_odds-global.difficulty,global.enemy_type_array[0],global.enemy_type_array[1],global.enemy_type_array[2]);

//#######################TILES####################################################
//add floor, path, and foilage tiles
set_ground_tiles(floor_tile_type,floor_odds,path_tile_type,path_odds,foliage_tile_type,foliage_odds);

//add wall tiles with variation
set_wall_tiles(wall_tile_type,wall_tile_type_rare,wall_odds);

//add line of sight and effect
set_los_effects_tiles(shadow_tile_type,shadow_tile_type_rare, shadow_odds);

}//end of if room = room_generation_test

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy the grid
if (ds_exists(grid,ds_type_grid)){
    ds_grid_destroy(grid);
    mp_grid_destroy(grid_path);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart the room
if ds_exists(grid,ds_type_grid){
    ds_grid_destroy(grid);
}
/*
if instance_exists(obj_player){
    with(obj_player){
        instance_destroy();
    }
}
if instance_exists(obj_enemy_parent){
    with(obj_enemy_parent){
        instance_destroy();
    }
}
if instance_exists(obj_wall){
    with(obj_wall){
        instance_destroy();
    }
}
*/
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
