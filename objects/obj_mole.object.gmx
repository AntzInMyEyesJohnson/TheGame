<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mole_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>spr_mole_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init enemy
comscript = ceBurrow;
ani_alarm = -1;
ani_length = 0;
ani_idle = spr_mole_idle;
//ani_move = spr_mole_move;
ani_charge = spr_mole_charge;
ani_attack = spr_mole_attack;
ani_hit = spr_mole_hit;
//ani_dodge = spr_mole_retreat;
//ani_parry = spr_mole_parry;
//ani_retreat = spr_mole_retreat;
//ani_teleport = spr_mole_teleport;
ani_vulnerable = spr_mole_idle;
ani_deathnormal = spr_mole_deathnormal;
ani_deathbyslash = spr_mole_deathbyslash;
ani_deathsplat = spr_mole_death_splat;
sound_eattack = snd_cpt_rifle_shot;
eff_type = ffMAIN;
vuln_type = vSTUNNED;
my_click_count = 0;
my_attack_range = 150;
react_count = 0;
max_speed = 0/room_speed;
move_speed = max_speed;//
enemy_health_max = 2;
enemy_health = enemy_health_max;
blood_type = global.pt_spark;
scale_factor = 1;
InitializeEnemies();
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///checks and collisions
depth = -y;
//screen freeze check
if (ScreenFreezeCheck()){exit;}

//execute commands
//reset move speed for when it gets changed in script;
move_speed = max_speed;
//perform hit and react checks
PerformChecks(ceBlank,checkType);
//## MAIN = COMSCRIPT ######## -the command that will run until completion
script_execute(comscript,
    //## ARG0 = COMALERT ######### -the alert command that will run when alerted to player
    /*COMALERT:*/ceBurrow,
    //## ARG1 = COMENDATTACK ##### -the command that will run at completion of attacking
    /*COMENDATTACK:*/ceBurrow,
    //## ARG3 = COMENDREACT ###### -the command that will run at completion of reaction (ie ceDodgeAttack)
    /*COMENDREACT:*/ceBlank,
    //## ARG4 = COMENDVULN ######## -the command that will run at completion of being vulnerable (ie frozen, stunned, dazed)
    /*COMENDVULN:*/ceBurrow,
    //## ARG5 = COMENDHIT ######## -the command that will run at completion of getting hit
    /*COMENDHIT:*/ceBurrow,
    //## ARG6 = COMENDDEATH ###### -the command that will run at completion of dying
    /*COMENDDEATH:*/ceDestroy,
    //## ARG7 = VARATKTYPE ### -the hitbox object that will be created while attacking
    /*VARATKTYPE:*/obj_enemy_projectile,
    //## ARG8 = VARATKNUMBER ### -the number of hitbox objects to create while attacking
    /*VARATKNUMBER:*/12,
    //## ARG9 = VARATKBUFFER ### -whether there is a buffer between hitbox object creation or creation all at once
    /*VARATKBUFFER:*/false,
    //## ARG8 = VARCHARLENGTH ### -the length of the charge attack animation
    /*VARCHARLENGTH:*/90,
    //## ARG9 = VARATKRANDOM ### -whether the bullets is random spread or evenly spread
    /*VARATKRANDOM:*/false);       

//maintain facing direction
if (round(destdir/180) == 1){img_xsc = -1;}else {img_xsc = 1;}
img_xsc = sign(img_xsc)*scale_factor;
image_xscale = img_xsc;
image_yscale = sign(image_yscale)*scale_factor;

EnemyCollisionWithWallGrid();

HitbyListManagement();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mole
event_inherited();

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
