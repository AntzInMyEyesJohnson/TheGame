<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list
if ds_exists(ff_list,ds_type_list){
    ds_list_destroy(ff_list);
}

if ds_exists(hitby_list,ds_type_list){
    ds_list_destroy(hitby_list);
}

if ds_exists(swords_queue,ds_type_queue){
    ds_queue_destroy(swords_queue);
}

if ds_exists(copy_queue,ds_type_queue){
    ds_queue_destroy(copy_queue);
}


if (path_exists(path)){
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list
if ds_exists(hitby_list,ds_type_list){
    ds_list_destroy(hitby_list);
}

visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///list stuff
if !ds_exists(hitby_list,ds_type_list){
    hitby_list = ds_list_create();
}

if (room == rm_level_generator or room == rm_testing){
    visible = true;
    
    /*############### ABILITY UPGRADE ################*/
    //check for the ability upgrade if not already upgraded
    if (ability_power_up == false and !ds_list_empty(attached_upgrades)){
        for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
            if (attached_upgrades[| i] == ABILI_POW){
                //if present then champion does power up move
                ability_power_up = true;
                break;
            }
        }
    }
    
    /*############### SPECIAL UPGRADE ################*/
    //check for the ability upgrade if not already upgraded
    if (special_power_up == false and !ds_list_empty(attached_upgrades)){
        for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
            if (attached_upgrades[| i] == SPEC_MOVE){
                //if present then samurais special thousands swords
                special_power_up = true;
                break;
            }
        }
    }
    
    /*############### ATTACK UPGRADE ################*/
    //check for the attack upgrade if not already upgraded
    if (attack_power_up == false and !ds_list_empty(attached_upgrades)){
        for(var i = 0;i &lt; ds_list_size(attached_upgrades);i++){
            if (attached_upgrades[| i] == MAIN_WEAP){
                //if present then players main weapon becomes upgraded
                attack_power_up = true;
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy list
if ds_exists(ff_list,ds_type_list){
    ds_list_destroy(ff_list);
}

if ds_exists(hitby_list,ds_type_list){
    ds_list_destroy(hitby_list);
}

if ds_exists(swords_queue,ds_type_queue){
    ds_queue_destroy(swords_queue);
}

if ds_exists(copy_queue,ds_type_queue){
    ds_queue_destroy(copy_queue);
}


if (path_exists(path)){
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
