<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Surface
sf = -1;

hue = 0;
img = 0;
rot = 0;
scale = 0;
die_alarm = 0;
die_limit = 0;
alpha = 1;
sprite = undefined;
img_blend = 0;
image_speed = 0;
draw_lines = false;
do_lines = false;

// Trail length in frames
length = 0;
dir = 0;

creator = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free memory

if (surface_exists(sf))
    surface_free(sf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when to destroy itself

if (!instance_exists(creator) or creator == noone or creator == -1 or die_alarm &lt; -die_limit){
    instance_destroy();
}else{
    //set depth behind creator
    depth = creator.depth+1;
    
    if (die_alarm mod 5 == 0){
        for (var i = (length - 1); i &gt; 0; i--) {
            st_x[i] = st_x[i - 1];//+lengthdir_x(i,dir-180);
            st_y[i] = st_y[i - 1];//+lengthdir_y(i,dir-180);
        }
        st_x[0] = creator.x;
        st_y[0] = creator.y;
    }
    
    die_alarm--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Surface
/*
sf  = -1;

hue = 0;
rot = 0;

// Trail length in frames
length = 0;*/

if (surface_exists(sf))
    surface_free(sf);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free memory

if (surface_exists(sf))
    surface_free(sf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>img_blend = make_color_hsv(hue, 240, 160);

if (!surface_exists(sf)){
    sf = surface_create(512, 256);
}

surf_w = surface_get_width(sf);
surf_h = surface_get_height(sf);
surf_x = x-surf_w/2;
surf_y = y-surf_h/2;

// Draw trail to surface
surface_set_target(sf);
draw_clear_alpha(c_black, 0);// Clear surface
for (var i = 0; i &lt; length; i += 1){
    draw_sprite_ext(sprite, image_index, st_x[i]-surf_x, st_y[i]-surf_y, sign(creator.image_xscale)*scale, sign(creator.image_yscale)*scale, rot, img_blend, alpha);
}
draw_set_blend_mode(bm_subtract);
    draw_sprite(spr_overlay_small, 0, 0, 0);
draw_set_blend_mode(bm_normal);
surface_reset_target();

// Draw surface to screen
draw_surface(sf, x-surf_w/2, y-surf_h/2);

//draw lines if ok
if (do_lines){
    vfactor = irandom_range(-20,20);
    tfactor = 14;
    val = -2;
    line_alpha = 2+(die_limit div 10);
    sx = creator.x+lengthdir_x(vfactor,rot);
    sy = creator.y+lengthdir_y(vfactor,rot);
    draw_lines = true;
    do_lines = false;
}

if(draw_lines){
    line_alpha -= .1;
    draw_set_alpha(line_alpha);
    draw_triangle_colour(sx+lengthdir_x(15,rot-90),sy+lengthdir_y(15,rot-90),sx+lengthdir_x(25,rot),sy+lengthdir_y(25,rot),sx+lengthdir_x(15,rot+90),sy+lengthdir_y(15,rot+90),img_blend,img_blend,img_blend,true);
    draw_triangle_colour(sx+lengthdir_x(tfactor,rot-90),sy+lengthdir_y(tfactor,rot-90),sx+lengthdir_x(tfactor+10,rot),sy+lengthdir_y(tfactor+10,rot),sx+lengthdir_x(tfactor,rot+90),sy+lengthdir_y(tfactor,rot+90),img_blend,img_blend,img_blend,true);
    draw_set_alpha(1);
    tfactor += val;
    tfactor = clamp(tfactor,2,14);
    if (tfactor == 2 or tfactor == 14){val *= -1;}
}

    
// Draw final sprite
//draw_sprite_ext(creator.sprite_index, creator.image_index, mouse_x, mouse_y, 1, 1, rot, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
